Height tree 
#include <stdio.h>
#include <stdlib.h>

// Define the structure for a node in the tree
struct Node {
    int data;
    struct Node* left;
    struct Node* right;
};

// Function to create a new node
struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}

// Function to calculate the height of the tree
int calculateHeight(struct Node* root) {
    if (root == NULL) {
        return 0; // Base case: height of an empty tree is 0
    }

    int leftHeight = calculateHeight(root->left);   // Height of left subtree
    int rightHeight = calculateHeight(root->right); // Height of right subtree

    return 1 + (leftHeight > rightHeight ? leftHeight : rightHeight); // Return the max height + 1 for root
}

// Main Function
int main() {
    // Manually creating a sample tree:
    //         1
    //        / \
    //       2   3
    //      / \
    //     4   5
    struct Node* root = createNode(1);
    root->left = createNode(2);
    root->right = createNode(3);
    root->left->left = createNode(4);
    root->left->right = createNode(5);

    printf("The height of the tree is: %d\n", calculateHeight(root));
    return 0;
}
