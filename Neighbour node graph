#include <stdio.h>
#define MAX 100

void findNeighbors(int adjMatrix[MAX][MAX], int node, int vertices) {
    printf("Neighbors of node %d: ", node);
    int hasNeighbors = 0;
    for (int i = 0; i < vertices; i++) {
        if (adjMatrix[node][i] == 1) {
            printf("%d ", i);
            hasNeighbors = 1;
        }
    }
    if (!hasNeighbors) {
        printf("No neighbors");
    }
    printf("\n");
}

int main() {
    int adjMatrix[MAX][MAX];
    int vertices, edges;

    // Input number of vertices and edges
    printf("Enter the number of vertices: ");
    scanf("%d", &vertices);

    printf("Enter the number of edges: ");
    scanf("%d", &edges);

    // Initialize adjacency matrix
    for (int i = 0; i < vertices; i++) {
        for (int j = 0; j < vertices; j++) {
            adjMatrix[i][j] = 0;
        }
    }

    // Input edges
    printf("Enter the edges (start_vertex end_vertex):\n");
    for (int i = 0; i < edges; i++) {
        int start, end;
        scanf("%d %d", &start, &end);
        adjMatrix[start][end] = 1; // Directed graph
        adjMatrix[end][start] = 1; // Uncomment for undirected graph
    }

    // Find neighbors of a specific node
    int node;
    printf("Enter the node to find neighbors: ");
    scanf("%d", &node);

    if (node >= 0 && node < vertices) {
        findNeighbors(adjMatrix, node, vertices);
    } else {
        printf("Invalid node. It must be between 0 and %d.\n", vertices - 1);
    }

    return 0;
}
